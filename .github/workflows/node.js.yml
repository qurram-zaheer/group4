# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: ./codeanalyzer-backend
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
      - run: npm install
  
  test:
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: ./codeanalyzer-backend
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
      - run: npm run test
      
  deploy-backend:
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: ./codeanalyzer-backend
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.12 
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "code-analyzer-backend"
          heroku_email: "qr620423@dal.ca"
          appdir: codeanalyzer-backend
  
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [deploy-backend]
    steps:
      - uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.12 
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "codeanalyzer"
          heroku_email: "qr620423@dal.ca"
          appdir: codeanalyzer-frontend
  
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
