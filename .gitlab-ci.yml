image: node:16.14.0

cache:
  paths:
    - node_modules/

stages:
  - build
  - test
  - deploy_uat
  - deploy_frontend_prod
  - deploy_backend_prod
  - sonarqube-check

build:
  stage: build
  tags:
    - dalfcs_gitlab_docker_ci
  script:
    - cd codeanalyzer-backend
    - npm install
    - cd ../codeanalyzer-frontend
    - npm install
    - cd ..
    - npm run full-prod-mode

test:
  stage: test
  script:
    - echo "Pipeline test started"
  tags:
    - dalfcs_gitlab_docker_ci
  script:
    - cd codeanalyzer-backend
    - npm run test

deploy_uat:
  stage: deploy_uat
  tags:
    - dalfcs_gitlab_docker_ci
  script:
    - echo "dbURL=$DATABASE_TEST_URL" >> .env
    - echo "dbUserName=$DATABASE_TEST_USERNAME" >> .env
    - echo "dbPassword=$DATABASE_TEST_PASSWORD" >> .env
    - echo "dbDriver=$DATABASE_DRIVER" >> .env
    - echo "Deploying the develop pipeline"
    - chmod og-rwx ${DEPLOY_SSH_KEY}
    - git clone https://git.cs.dal.ca/courses/2022-winter/csci-5308/group4.git
    - git checkout uat
    - cd group4
    - yarn
  only:
    - uat

sonarqube-check:
  stage: sonarqube-check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  script:
    - cd codeanalyzer-backend
    - sonar-scanner -Dsonar.organization=csci5308g4 -Dsonar.projectKey=code_at -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io
  allow_failure: true
  only:
    - main # or the name of your main branch

deploy_backend_prod:
  stage: deploy_backend_prod
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - apt-get install -u zip unzip
    - gem install faraday -v 1.10.0
    - gem install dpl
    - npm config set legacy-peer-deps true
    - cd codeanalyzer-backend
    - echo "DATABASE_HOST=$DATABASE_PROD_HOST" > .env
    - echo "DATABASE_PORT=$DATABASE_PROD_PORT" > .env
    - echo "DATABASE_NAME=$DATABASE_PROD_NAME" > .env
    - echo "DATABASE_USERNAME=$DATABASE_PROD_USERNAME" >> .env
    - echo "DATABASE_PASSWORD=$DATABASE_PROD_PASSWORD" >> .env
    #    - echo "dbDriver=$DATABASE_DRIVER" >> .env
    - echo "Deploying the release pipeline"
    - dpl --provider=heroku --app=$HEROKU_APP_BACKEND --api-key=$HEROKU_API_KEY
  only:
    - main

deploy_frontend_prod:
  stage: deploy_frontend_prod
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - apt-get install -u zip unzip
    - gem install faraday -v 1.10.0
    - gem install dpl
    - npm config set legacy-peer-deps true
    - cd codeanalyzer-frontend
    - echo "Deploying the frontend release pipeline"
    - dpl --provider=heroku --app=$HEROKU_APP --api-key=$HEROKU_API_KEY --skip-cleanup
  only:
    - main
